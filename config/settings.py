"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'djangsdasdas-fasfgsaf65f4165s-77kf3embmk1l8hkasfhfghdfg#6i=@f1g!%jy#6ipo(jasdasfasfasf33)=dh@)3wlckprc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third-party apps
    'rest_framework',
    'crispy_forms',
    'crispy_bootstrap5',
    
    # Project apps
    'accounts',
    'projects',
    'tasks',
    'teams',
    'dashboard',
    'communications',
    'reports',
    'github_integration',  # GitHub entegrasyonu
    'chatbot',  # AI Yardımcı Sohbet uygulaması
    'accounting',  # Muhasebe ve paket yönetimi
    'ideas',  # Fikir not defteri
    'articles',  # Makale sistemi
    'sellers',  # Satış yönetimi
    'calendar_app',  # Takvim sistemi
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware'
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# PostgreSQL configuration - for production use
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'proje_takip',
#         'USER': 'postgres',
#         'PASSWORD': 'postgres',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }

# SQLite configuration - for development use
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'tr-tr'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Authentication
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = 'dashboard:index'
LOGOUT_REDIRECT_URL = 'accounts:login'

# Custom User Model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Celery Configuration
from celery.schedules import crontab

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# Celery Beat Schedule
CELERY_BEAT_SCHEDULE = {
    'check-approaching-deadlines': {
        'task': 'communications.tasks.check_approaching_deadlines',
        'schedule': crontab(hour=9, minute=0),  # Her gün saat 09:00'da çalışır
    },
    
    # GitHub senkronizasyon görevleri
    'sync-all-github-repositories': {
        'task': 'github_integration.tasks.sync_all_repositories',
        'schedule': crontab(hour=1, minute=0),  # Her gün saat 01:00'da çalışır
    },
    'sync-stale-github-issues': {
        'task': 'github_integration.tasks.sync_stale_issues',
        'schedule': crontab(hour=2, minute=0),  # Her gün saat 02:00'da çalışır
    },
}

# GitHub Entegrasyonu Ayarları
# --------------------------------------------------
# GitHub OAuth için gerekli bilgiler
GITHUB_OAUTH_ENABLED = True
GITHUB_CLIENT_ID = '' # Her kullanıcı kendi bilgilerini girebilir
GITHUB_CLIENT_SECRET = '' # Her kullanıcı kendi bilgilerini girebilir
GITHUB_REDIRECT_URI = 'http://localhost:8000/github/callback/'

# GitHub Webhook için gerekli bilgiler
GITHUB_WEBHOOK_SECRET = 'webhook_secret_example'

# Demo mod: API erişimine gerek kalmadan demo veriler gösterilir
GITHUB_DEMO_MODE = False  # Demo modu devre dışı bırakıyoruz

# Not: Her kullanıcı kendi GitHub OAuth uygulamasını oluşturup kişisel bilgilerini girebilir.
# GitHub Developer Settings'den (https://github.com/settings/developers) bir OAuth uygulaması oluşturun
# ve kendi client_id ve client_secret değerlerinizi sistemdeki GitHub OAuth ayarları sayfasından girin.


CSRF_TRUSTED_ORIGINS = [
    'https://saas.glitchsec.uno',
]
